<Window x:Class="ExelConverterLite.View.ExportView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
        xmlns:queue="clr-namespace:ExelConverter.Core.DataAccess;assembly=ExelConverter.Core"
        xmlns:Controls="clr-namespace:ExcelConverter.Parser.Controls;assembly=ExcelConverter.Parser"
        xmlns:helpers="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
        Title="Экспорт" MinHeight="500" MinWidth="400" FontSize="13" FontFamily="Calibri"
        WindowStartupLocation="CenterOwner" ShowInTaskbar="False"
        DataContext="{Binding Export, Source={StaticResource Locator}}">
    <Window.Resources>
        <helpers:ApplyConverter x:Key="ApplyConverter"/>
        <!--<helpers:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter"/>-->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    <Grid>
        <TabControl SelectedIndex="0">
            <TabItem Header="Сетка">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60*" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="40*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="dg" 
                                Margin="2"
                                ItemsSource="{Binding RowsToExport}" 
                                IsSynchronizedWithCurrentItem="True" 
                                SelectedIndex="{Binding SelectedRow}" 
                                SelectionMode="Extended">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue" />
                        </DataGrid.Resources>
                    </DataGrid>
                    <Rectangle Fill="Black" Height="3" Grid.Row="1" />
                    <TabControl Grid.Row="2" Margin="2" >
                        <TabItem>
                            <TabItem.Header>
                                <TextBlock Text="{Binding Errors.Count, StringFormat=Ошибки ({0})}"/>
                            </TabItem.Header>
                            <DataGrid Grid.Row="1" ItemsSource="{Binding Errors}" AutoGenerateColumns="False" CanUserAddRows="False" 
                          CanUserDeleteRows="False" CanUserReorderColumns="False" SelectionMode="Single" 
                          SelectedItem="{Binding SelectedError}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <cmd:EventToCommand Command="{Binding UpdateSelectedErrorCommand}" PassEventArgsToCommand="False"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding RowNumber}" Header="№ строки" IsReadOnly="True"/>
                                    <DataGridTextColumn Binding="{Binding Description}" Header="Описание" Width="100*" IsReadOnly="True" />
                                </DataGrid.Columns>
                                <DataGrid.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                            Color="Red"/>
                                </DataGrid.Resources>
                            </DataGrid>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <TextBlock Text="{Binding GlobalErrors.Count, StringFormat=Глобальные ошибки ({0})}"/>
                            </TabItem.Header>
                            <DataGrid Grid.Row="1" ItemsSource="{Binding GlobalErrors}" AutoGenerateColumns="False" CanUserAddRows="False" 
                                      CanUserDeleteRows="False" CanUserReorderColumns="False" SelectionMode="Single">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Description}" Header="Описание" Width="100*" IsReadOnly="True" />
                                </DataGrid.Columns>
                                <DataGrid.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red"/>
                                </DataGrid.Resources>
                            </DataGrid>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <TextBlock Text="{Binding Warnings.Count, StringFormat=Предупреждения ({0})}"/>
                            </TabItem.Header>
                            <DataGrid Grid.Row="1" ItemsSource="{Binding Warnings}" AutoGenerateColumns="False" CanUserAddRows="False" 
                          CanUserDeleteRows="False" CanUserReorderColumns="False" SelectionMode="Single"
                          SelectedItem="{Binding SelectedWarning}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <cmd:EventToCommand Command="{Binding UpdateSelectedWarningCommand}" PassEventArgsToCommand="False"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding RowNumber}" Header="№ строки" IsReadOnly="True"/>
                                    <DataGridTextColumn Binding="{Binding Description}" Width="100*" Header="Описание" IsReadOnly="True" />
                                </DataGrid.Columns>
                                <DataGrid.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DarkOrange"/>
                                </DataGrid.Resources>
                            </DataGrid>
                        </TabItem>
                    </TabControl>
                    <WrapPanel Grid.Row="3" Margin="2" Orientation="Horizontal">
                        <Button Content="Обновить" Margin="1" Height="20" Command="{Binding UpdateErrorsCommand}" />
                        <Button Content="Экспорт в csv" Margin="1" Height="20" Command="{Binding Export2CsvCommand}" />

                        <WrapPanel Margin="1" MinHeight="20">
                            <WrapPanel.Resources>
                                <queue:HttpDataAccessQueueParameters x:Key="params"/>
                            </WrapPanel.Resources>

                            <Button
                Content="Экспорт в БД"
                Command="{Binding ExportToQueueCommand}" 
                CommandParameter="{Binding Source={StaticResource params}, Path=.}"
                />

                            <CheckBox 
                    VerticalAlignment="Center" 
                    Margin="1"
                    Content="Автоматически активировать плоскости после импорта"
                    IsChecked="{Binding Source={StaticResource params}, Path=Activate}" />
                            <CheckBox 
                    VerticalAlignment="Center" 
                    Margin="1"
                    Content="Загружать координаты как оператор (если нет - как РА)"
                    IsChecked="{Binding Source={StaticResource params}, Path=CoordinatesApproved}" />
                            <CheckBox 
                    VerticalAlignment="Center" 
                    Margin="1"
                    Content="Грузить в очереди"
                    IsChecked="{Binding Source={StaticResource params}, Path=UseQueue}" />
                            <TextBlock 
                    VerticalAlignment="Center" 
                    Margin="1"
                    Text=" Таймаут: "/>
                            <TextBox 
                    VerticalAlignment="Center" 
                    Margin="1"
                    MinWidth="30"
                    Text="{Binding Source={StaticResource params}, Path=Timeout}"
                    />
                            <TextBlock 
                    VerticalAlignment="Center" 
                    Margin="1"
                    Text="сек."/>
                        </WrapPanel>


                    </WrapPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Парсинг данных">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" HorizontalAlignment="Left">
                        <Label Content="Использоваеть ссылки из сетки: " Padding="0" Margin="4,0" VerticalAlignment="Center"/>
                        <ComboBox x:Name="ComboBoxUrlsToParse" 
                                  ItemsSource="{Binding Path=UrlCollection}" 
                                  DisplayMemberPath="Name" 
                                  SelectedValuePath="Collection"
                                  Width="100"
                                  Margin="4,2"
                                  SelectedIndex="{Binding Path=UrlCollectionSelectedIndex}"/>
                    </DockPanel>
                    <Controls:ParsersControl 
                        Grid.Row="1"
                        Parsers="{Binding Path=Export.Parsers, Source={StaticResource Locator}}"
                        Urls="{Binding ElementName=ComboBoxUrlsToParse, Path=SelectedValue}"
                        ShowEditTab="False"
                        ShowImportTab="True"
                        AllowOpenSaveParsers="False"
                        AllowImportFileImport="False"
                        AllowImportFileExport="True"
                        AllowImportAll="True"
                        AllowImportPhoto="True"
                        AllowImportSchema="True"
                        AllowImportClearUrlsAfterImport="False"
                        />
                    <Grid Grid.Row="2">
                        <Button Content="Применить результаты парсинга" 
                                Padding="4,0" 
                                HorizontalAlignment="Left"
                                Margin="4"
                                Command="{Binding Path=ApplyParsingCommand}"
                                CommandParameter="{Binding ElementName=ComboBoxUrlsToParse, Path=SelectedValue}"
                                />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Настройки парсера">
                <Controls:ParsersControl 
                    Parsers="{Binding Path=Export.Parsers, Source={StaticResource Locator}}"
                    ShowEditTab="True"
                    ShowImportTab="True"
                    AllowOpenSaveParsers="True"
                    AllowImportFileImport="True"
                    AllowImportFileExport="True"
                    AllowImportAll="True"
                    AllowImportPhoto="True"
                    AllowImportSchema="True"
                    />
            </TabItem>
        </TabControl>
        <Grid Visibility="{Binding HasError, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="Black" Opacity="0.8"/>
            <Border Background="White" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="30,30">
                <TextBlock Text="{Binding InitializeError, StringFormat=Ошибка инициализации: {0}}"/>
            </Border>
        </Grid>
        <Grid Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="Black" Opacity="0.8"/>
            <Border Background="White" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0,30,0,0">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="30,0">
                        <TextBlock Text="{Binding LoadProgress, StringFormat=Идёт загрузка... {0}%}"/>
                        <Button Content="Отмена" Command="{Binding CancelCommand}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="80" Margin="10,0,0,0"/>
                    </StackPanel>
                    <ProgressBar Maximum="100" Minimum="0" Height="3" Value="{Binding LoadProgress, Mode=OneWay}" MinWidth="150" Margin="0,27,0,0"/>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>
