<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:p="clr-namespace:ExcelConverter.Parser"
    xmlns:helpers="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
    >

    <BooleanToVisibilityConverter x:Key="themeBooleanToVisibilityConverter"/>
    <helpers:ApplyConverter x:Key="themeApplyConverter"/>
    <helpers:ReverseBooleanToVisibilityConverter x:Key="themeReverseBooleanToVisibilityConverter"/>

    <Color x:Key="themeHightLightingColor">LightSkyBlue</Color>
    <Color x:Key="themeHightLightingDarkColor">#FF5894B9</Color>
    <Color x:Key="themeInactiveColor">GhostWhite</Color>
    <Color x:Key="themeDefaultColor">White</Color>
    <Color x:Key="themeDefaultShadowColor">Black</Color>
    <Color x:Key="themeBorderColor">#FF878787</Color>
    <!-- Gainsboro -->
    <Color x:Key="themeTransparentColor">Transparent</Color>
    <Color x:Key="themeDefaultPanelColor">LightGray</Color>

    <SolidColorBrush x:Key="themeHightLightingSolidBrush" Color="{DynamicResource themeHightLightingColor}"/>
    <SolidColorBrush x:Key="themeHightLightingDarkSolidBrush" Color="{DynamicResource themeHightLightingDarkColor}"/>
    <SolidColorBrush x:Key="themeInactiveSolidBrush" Color="{DynamicResource themeInactiveColor}"/>
    <SolidColorBrush x:Key="themeDefaultColorSolidBrush" Color="{DynamicResource themeDefaultColor}"/>
    <SolidColorBrush x:Key="themeBorderSolidBrush" Color="{DynamicResource themeBorderColor}"/>
    <SolidColorBrush x:Key="themeTransparentSolidBrush" Color="{DynamicResource themeTransparentColor}"/>

    <LinearGradientBrush x:Key="themeHightLightingLinearBrush">
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource themeHightLightingColor}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="themeHightLightingLinearBrushReverse">
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource themeHightLightingColor}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="themeHightLightingLinearBrushDark">
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource themeHightLightingDarkColor}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="themeHightLightingLinearBrushDarkReverse">
        <GradientStop Color="{DynamicResource themeHightLightingDarkColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="themeDefaultPanelLinearBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="0.7"/>
        <GradientStop Color="{DynamicResource themeHightLightingColor}" Offset="2"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="themeHightLightingPanelLinearBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource themeDefaultColor}" Offset="0.7"/>
        <GradientStop Color="{DynamicResource themeHightLightingDarkColor}" Offset="2"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="themeGoodButtonDefaultLinearBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF98F798" Offset="0"/>
        <GradientStop Color="#FF79C979" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="themeGoodButtonHoverLinearBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF98F798" Offset="0"/>
        <GradientStop Color="#FF64A064" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="themeGoodButtonDownLinearBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF64A064" Offset="0"/>
        <GradientStop Color="#FF64A064" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="themeGoodButtonDisabledLinearBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{DynamicResource themeInactiveColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource themeInactiveColor}" Offset="1"/>
    </LinearGradientBrush>


    <ControlTemplate x:Key="themeTabItemBigTemplate" TargetType="{x:Type TabItem}">
        <Border Name="Border" 
                BorderThickness="1,1,1,0" 
                BorderBrush="{DynamicResource themeBorderSolidBrush}" 
                Margin="0,0,2,0"
                Background="{DynamicResource themeDefaultColorSolidBrush}"
                >
            <Border.Effect>
                <DropShadowEffect x:Name="BorderDropShadowEffect"
                    BlurRadius="10" Color="{DynamicResource themeDefaultShadowColor}" Direction="0" Opacity=".5" RenderingBias="Quality" ShadowDepth="0" />
            </Border.Effect>
            <Border Name="BorderInside"
                    BorderThickness="0,0,0,4"
                    BorderBrush="{DynamicResource themeHightLightingSolidBrush}"
                    Padding="20,4"
                    Margin="-1,0">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="20" Color="{DynamicResource themeHightLightingColor}" Direction="0" Opacity=".3" RenderingBias="Quality" ShadowDepth="2" />
                </Border.Effect>
                <Grid x:Name="contentPresenterGrid" Margin="0,3,0,0"
                      TextBlock.FontSize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=FontSize, Converter={StaticResource themeApplyConverter}, ConverterParameter=+2}">
                    <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="10,2"/>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="BorderInside" Property="BorderBrush" Value="{DynamicResource ResourceKey=themeHightLightingSolidBrush}" />
                <Setter TargetName="contentPresenterGrid" Property="TextBlock.FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter TargetName="BorderInside" Property="BorderBrush" Value="{DynamicResource ResourceKey=themeTransparentSolidBrush}" />
                <Setter TargetName="contentPresenterGrid" Property="TextBlock.FontWeight" Value="Normal" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="themeTabItemBigStyle" TargetType="{x:Type TabItem}" BasedOn="{x:Null}">
        <Setter Property="Template" Value="{DynamicResource themeTabItemBigTemplate}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="themeDefaultBorderStyle">
        <Setter Property="Margin" Value="1,1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource themeBorderSolidBrush}"/>
        <Setter Property="Background" Value="{DynamicResource themeDefaultPanelLinearBrush}"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="{DynamicResource themeDefaultShadowColor}" Direction="235" Opacity=".5" RenderingBias="Quality" ShadowDepth="2" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="{DynamicResource themeHightLightingPanelLinearBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="themeGoodButtonStyle">
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource themeBorderSolidBrush}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" Color="#FF79C979" Direction="235" Opacity=".5" RenderingBias="Quality" ShadowDepth="2" />
                        </Border.Effect>
                        <ContentPresenter IsEnabled="{TemplateBinding IsEnabled}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource themeGoodButtonHoverLinearBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource themeGoodButtonDefaultLinearBrush}"/>
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" Color="{DynamicResource themeDefaultShadowColor}" Direction="235" Opacity=".5" RenderingBias="Quality" ShadowDepth="2" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource themeGoodButtonDownLinearBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource themeGoodButtonDisabledLinearBrush}"/>
                            <Setter TargetName="Border" Property="Effect" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="themeGoodButtonBigStyle" BasedOn="{StaticResource themeGoodButtonStyle}">
        <Setter Property="Padding" Value="15,6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Cursor" Value="Arrow"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>