<UserControl xmlns:Controls="clr-namespace:ExcelConverter.Parser.Controls"  
             x:Class="ExcelConverter.Parser.Controls.ParsersImportControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:p="clr-namespace:ExcelConverter.Parser"
             xmlns:local="clr-namespace:ExcelConverter.Parser.Controls"
             xmlns:helpers="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600"
             Loaded="UserControl_Loaded">
    <Grid x:Name="GridMain">
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <helpers:IsNotEqualsConverter x:Key="IsNotEqualsConverter"/>
            <helpers:ApplyConverter x:Key="ApplyConverter"/>
            <p:FinishedBackgroundConverter x:Key="FinishedBackgroundConverter"/>
            <helpers:IsEqualsConverter x:Key="IsEqualsConverter"/>
            <helpers:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter"/>
        </Grid.Resources>
        <TabControl SelectedIndex="0" Grid.Row="1" x:Name="TabControl">
            <TabItem Header="Импорт"
                     IsEnabled="{Binding ElementName=TabControl, Path=SelectedIndex, Converter={StaticResource IsEqualsConverter}, ConverterParameter=0}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*" Name="ExpRowOne"/>
                        <RowDefinition Height="*" Name="ExpRowTwo"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" 
              Visibility="{Binding Path=AllowFileImport, Converter={StaticResource BooleanToVisibilityConverter}}"
              IsEnabled="{Binding Path=IsBusy, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}"
              >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Padding="0" Margin="0,0,0,4" Grid.ColumnSpan="4">
                            <TextBlock Text="Выберите файл-таблицу и нажмите на кнопку 'Импортировать' для загрузки ссылок." TextWrapping="WrapWithOverflow"/>
                        </Label>
                        <Label Grid.Row="1" Grid.Column="0" Content="Файл:" Padding="0" Margin="0,0,4,0"/>
                        <TextBox Grid.Row="1" Grid.Column="1" x:Name="ImportFileNameTextBox" IsReadOnly="True" Text="{Binding Path=ImportFileName}"/>
                        <Button Grid.Row="1" Grid.Column="2" Padding="4,0" Margin="-1,0,0,0"
                    Content="..."
                    Command="{Binding Path=SelectFileCommand}"/>
                        <!--<Button Grid.Row="1" Grid.Column="3" Padding="4,0" Margin="4,0,0,0"
                    Content="Импортировать" 
                    Command="{Binding Path=ImportFileCommand}"
                    CommandParameter="{Binding ElementName=ImportFileNameTextBox, Path=Text}"
                    />-->
                        <Button Grid.Row="1" Grid.Column="3" Padding="4,0,0,0" Margin="4,0,2,0"
                    Click="Button_Click"
                    ContextMenuService.IsEnabled="False"
                    >
                            <Button.Content>
                                <DockPanel>
                                    <Label Content="Импортировать" Padding="0"/>
                                    <Path Margin="4" VerticalAlignment="Center" Width="10" Fill="#FF527DB5" Stretch="Uniform" HorizontalAlignment="Right" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "/>
                                </DockPanel>
                            </Button.Content>
                            <Button.ContextMenu>
                                <ContextMenu >
                                    <MenuItem Header="Импортировать" Command="{Binding Path=ImportFileCommand}" CommandParameter="{Binding ElementName=ImportFileNameTextBox, Path=Text}"/>
                                    <MenuItem Header="Импортировать (детально)" Command="{Binding Path=ImportFileAdditionalCommand}" CommandParameter="{Binding ElementName=ImportFileNameTextBox, Path=Text}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </Grid>

                    <Expander x:Name="UrlsExpander"
                          Background="DarkOrange"
                          IsExpanded="True"
                          Grid.Row="1"
                          local:ParsersImportControl.ExpandRow="{Binding Path=IsExpanded,RelativeSource={RelativeSource Self}}"
                          >
                        <Expander.Header>
                            <Grid Margin="0,1,0,0"
                                  Width="{Binding ElementName=UrlsExpander, Path=ActualWidth, Converter={StaticResource ApplyConverter}, ConverterParameter=-28}">
                                <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding Path=Urls.Count, StringFormat=Найденные ссылки ({0}):}"/>
                                </Label>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Label Padding="0" Margin="4,0"
                                        Visibility="{Binding Path=IsParsing, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        >
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}Прошло времени: {0:D2}:{1:D2}:{2:D2}">
                                                    <Binding Path="ParseTimeElapsed.Hours" />
                                                    <Binding Path="ParseTimeElapsed.Minutes" />
                                                    <Binding Path="ParseTimeElapsed.Seconds" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Label>
                                    <DockPanel Visibility="{Binding Path=AllowFileImport, Converter={StaticResource BooleanToVisibilityConverter}}"
                                               IsEnabled="{Binding Path=IsBusy, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}">
                                        <Label Content="Потоки:" Padding="0" Margin="0,0,2,0"/>
                                        <TextBox Width="20" Text="{Binding Path=ThreadCount, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DockPanel>
                                    <Label Content="{Binding Path=ProgressText}" Padding="0" Visibility="{Binding Path=IsParsing, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Button Padding="4,0,0,0" Margin="4,0,0,0"
                                            Click="Button_Click"
                                            ContextMenuService.IsEnabled="False"
                                            Visibility="{Binding Path=IsParsing, Converter={StaticResource ReverseBooleanToVisibilityConverter}}"
                                            >
                                        <Button.Content>
                                            <DockPanel>
                                                <Label Content="Обработать ссылки" Padding="0"/>
                                                <Path Margin="4" VerticalAlignment="Center" Width="10" Fill="#FF527DB5" Stretch="Uniform" HorizontalAlignment="Right" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "/>
                                            </DockPanel>
                                        </Button.Content>
                                        <Button.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Все" Command="{Binding Path=ParseUrlsCommand}" IsEnabled="{Binding Path=AllowImportAll}"/>
                                                <Separator />
                                                <MenuItem Header="Только 'Фото'" Command="{Binding Path=ParseUrlsCommand}" CommandParameter="Фото" IsEnabled="{Binding Path=AllowImportPhoto}"/>
                                                <MenuItem Header="Только 'Схема'" Command="{Binding Path=ParseUrlsCommand}" CommandParameter="Схема" IsEnabled="{Binding Path=AllowImportSchema}"/>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>

                                    <Button Content="Остановить" 
                                            Padding="4,0"
                                            Margin="4,0,0,0"
                                            Visibility="{Binding Path=IsParsing, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Command="{Binding Path=StopParseCommand}"
                                            />
                                    <Button Content="Экспортировать..."
                                            Padding="4,0"
                                            Margin="4,0,0,0"
                                            Visibility="{Binding Path=AllowFileExport, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            IsEnabled="{Binding Path=IsBusy, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}"
                                            Command="{Binding Path=ExportUrlsCommand}"/>
                                </StackPanel>
                            </Grid>
                        </Expander.Header>
                        <ListBox ItemsSource="{Binding Path=Urls}"
                                 Margin="4"
                                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                                 IsEnabled="{Binding Path=IsBusy, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid 
                                        Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, Path=ActualWidth, Converter={StaticResource ApplyConverter}, ConverterParameter=-50}"
                                        Background="{Binding Path=FinishResult, Converter={StaticResource FinishedBackgroundConverter}}"
                                        >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Grid.Row="0" Content="x" Grid.Column="0" Padding="1,-6,0,-2" Margin="0" 
                                            Command="{Binding Path=DeleteUrlCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" 
                                            CommandParameter="{Binding Path=Value}"
                                            />
                                        <Button Grid.Row="0" Content="Открыть" Grid.Column="1" Padding="0" Margin="4,0" 
                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=NavigateCommand}"
                                            CommandParameter="{Binding Path=Value}"
                                            />
                                        <Label Grid.Row="0" Padding="0" Margin="4,0,0,0" Grid.Column="2">
                                            <TextBlock Text="{Binding Path=Value}" TextWrapping="WrapWithOverflow"/>
                                        </Label>

                                        <Grid Grid.Row="1"
                                              Grid.ColumnSpan="3"
                                              HorizontalAlignment="Stretch"
                                              Visibility="{Binding Path=IsFinished, Converter={StaticResource BooleanToVisibilityConverter}}"
                                              >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <StackPanel Orientation="Horizontal" Margin="2,2">
                                                <TextBlock Padding="0" Text="{Binding Path=Result.TimeToLoadContent, StringFormat={}Время загрузки страницы: {0:0.00} сек.}" Margin="0,0,4,0"/>
                                                <TextBlock Padding="0" Text="{Binding Path=Result.TimeToParse, StringFormat={}Время поиска ссылок на картинки: {0:0.00} сек.}" Margin="0,0,4,0"/>
                                            </StackPanel>

                                            <ItemsControl 
                                                Grid.Row="1"
                                                HorizontalAlignment="Stretch"
                                                ItemsSource="{Binding Path=Result.Data}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=ActualWidth, Converter={StaticResource ApplyConverter}, ConverterParameter=-20}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Grid.Column="0" Text="{Binding Path=Key}" Padding="0" Margin="0,0,4,0"/>
                                                            <TextBlock Grid.Column="1" Padding="0">
                                                <Hyperlink 
                                                    NavigateUri="{Binding Path=Value}"
                                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=NavigateCommand}"
                                                    CommandParameter="{Binding Path=Value}">
                                                    <TextBlock Text="{Binding Path=Value}"/>
                                                </Hyperlink>
                                            </TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Expander>
                    <Expander x:Name="HostsExpander"
                          Background="DarkOrange"
                          IsExpanded="True"
                          Grid.Row="2"
                          local:ParsersImportControl.ExpandRow="{Binding Path=IsExpanded,RelativeSource={RelativeSource Self}}"
                          >
                        <Expander.Header>
                            <Grid Margin="0,1,0,0"
                                  Width="{Binding ElementName=UrlsExpander, Path=ActualWidth, Converter={StaticResource ApplyConverter}, ConverterParameter=-28}"
                                  >
                                <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding Path=Hosts.Count, StringFormat=Найденные хосты ({0}):}"/>
                                </Label>
                            </Grid>
                        </Expander.Header>

                        <Grid IsEnabled="{Binding Path=IsBusy, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="61*"/>
                                <ColumnDefinition Width="531*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ListBox ItemsSource="{Binding Path=Hosts}"
                                     x:Name="HostLixtBox"
                                     Margin="4"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     IsEnabled="{Binding Path=IsBusy, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}" Grid.ColumnSpan="2"
                                    >
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <Label Padding="0" Margin="4,0,4,0" Grid.Column="1" IsEnabled="{Binding IsItemEnabled}">
                                                <TextBlock Text="{Binding Path=Value}" TextWrapping="WrapWithOverflow"/>
                                            </Label>
                                            <DockPanel Visibility="{Binding Path=SimilarParserExists, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Label Padding="0" Margin="4,0,4,0" Grid.Column="1" IsEnabled="{Binding IsItemEnabled}" Foreground="DarkGreen">
                                                    <DockPanel>
                                                        <TextBlock Text="| уже существует подобный: '" TextWrapping="WrapWithOverflow"/>
                                                        <TextBlock Text="{Binding Path=SimilarParser.Url}" TextWrapping="WrapWithOverflow"/>
                                                        <TextBlock Text="' с метками: " TextWrapping="WrapWithOverflow"/>
                                                        <TextBlock Text="{Binding Path=SimilarParserRules}" TextWrapping="WrapWithOverflow"/>
                                                    </DockPanel>
                                                </Label>
                                            </DockPanel>
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Button
                                Grid.Row="1"
                                Content="Сгеренировать правило..."
                                Padding="4,2"
                                Margin="4,4,0,4"
                                HorizontalAlignment="Left"
                                IsEnabled="{Binding ElementName=HostLixtBox, Path=SelectedItems.Count, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=0}"
                                Command="{Binding SelectGenerateRuleTabCommand}" Grid.ColumnSpan="2"/>
                        </Grid>
                    </Expander>
                </Grid>
            </TabItem>
            <TabItem Header="Создание правила" 
                     IsEnabled="{Binding ElementName=HostLixtBox, Path=SelectedItems.Count, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=0}"
                     Visibility="{Binding ElementName=ParsersGenerateRuleControl, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Controls:ParsersGenerateRuleControl 
                        Parser="{Binding ElementName=HostLixtBox, Path=SelectedItem.Parser}"
                        Urls="{Binding ElementName=HostLixtBox, Path=SelectedItem.Urls}"
                        Margin="3,5"
                        x:Name="ParsersGenerateRuleControl"
                        Done="ParsersGenerateRuleControl_Done"
                        Cancel="ParsersGenerateRuleControl_Cancel"
                        CanCancel="True"
                        CanEditUrl="True"
                        />
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
