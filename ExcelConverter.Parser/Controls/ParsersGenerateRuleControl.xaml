<UserControl x:Class="ExcelConverter.Parser.Controls.ParsersGenerateRuleControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:p="clr-namespace:ExcelConverter.Parser"
             xmlns:helpers="clr-namespace:Helpers.WPF.Converters;assembly=Helpers.WPF"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             mc:Ignorable="d" 
             d:DesignHeight="320" d:DesignWidth="700"
             Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <p:ImageFromUrlConverter x:Key="ImageFromUrlConverter"/>
        <p:IsNotEqualsConverter x:Key="IsNotEqualsConverter"/>
        <p:IsSelectedBackgroundConverter x:Key="IsSelectedBackgroundConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <p:ParseRuleConnectionTypeList x:Key="ParseRuleConnectionTypeList"/>
        <helpers:ApplyConverter x:Key="ApplyConverter"/>
        <!--<p:ParseFindRuleConditionList x:Key="ParseFindRuleConditionList"/>-->

        <Style x:Key="ListBoxItemStyleClear" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, 
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment,
             RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="WhiteSmoke"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid 
            Background="LightGreen" 
            x:Name="GridMain"
            IsEnabled="{Binding Path=IsBusy, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <WrapPanel Margin="4">
            <WrapPanel.Resources>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </WrapPanel.Resources>

            <DockPanel Margin="8,0">
                <Label Content="Генерирование правила для парсера:" VerticalAlignment="Center"/>
                <TextBox 
                    Text="{Binding Path=Parser.Url}" 
                    IsReadOnly="{Binding Path=CanEditUrl, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=true}"
                    MinWidth="200"
                    Margin="4,2"/>
            </DockPanel>

            <DockPanel Margin="8,0">
                <Label Content="Метка:" Padding="0" VerticalAlignment="Center" Margin="0,2"/>
                <ComboBox 
                    ItemsSource="{Binding Parser.Labels}" 
                    SelectedIndex="0"
                    x:Name="AddRuleLabelComboBox"
                    MinWidth="150"
                    Margin="4,2"/>
            </DockPanel>

            <DockPanel Margin="8,0">
                <Label Content="Тип подключения:" Padding="0" VerticalAlignment="Center" Margin="0,2"/>
                <ComboBox
                        ItemsSource="{StaticResource ParseRuleConnectionTypeList}"
                        SelectedValue="{Binding Path=NewParseRule.Connection}"
                        x:Name="ParseRuleConnectionTypeComboBox"
                        MinWidth="150"
                        Margin="4,2"
                    />
            </DockPanel>

            <DockPanel Margin="8,0">
                <Label Content="Минимальный размер:" Padding="0" VerticalAlignment="Center" Margin="0,2"/>
                <TextBox
                        MinWidth="50"
                        Margin="4,2"
                        Text="{Binding Path=NewParseRule.MinImageWidth}"
                    />
                <Label Content="х" Padding="0" VerticalAlignment="Center" Margin="0,2"/>
                <TextBox
                        MinWidth="50"
                        Margin="4,2"
                        Text="{Binding Path=NewParseRule.MinImageHeight}"
                    />
            </DockPanel>

            <CheckBox VerticalAlignment="Center" IsChecked="{Binding Path=NewParseRule.CheckImageSize}" Margin="8,0">
                <Label Padding="0" VerticalAlignment="Center">
                    <TextBlock Text="Обязательно проверять размер при генерации правила" TextWrapping="WrapWithOverflow"/>
                </Label>
            </CheckBox>

            <DockPanel Margin="8,0">
                <Label Content="Количество потоков:" VerticalAlignment="Center"/>
                <TextBox 
                    Text="{Binding Path=ThreadCount}" 
                    MinWidth="50"
                    Margin="4,2"/>
            </DockPanel>

            <CheckBox VerticalAlignment="Center" IsChecked="{Binding Path=NewParseRule.CollectIMGTags}" Margin="8,0">
                <Label Padding="0" VerticalAlignment="Center">
                    <TextBlock Text="Загружать картинки (IMG)" TextWrapping="WrapWithOverflow"/>
                </Label>
            </CheckBox>
            <CheckBox VerticalAlignment="Center" IsChecked="{Binding Path=NewParseRule.CollectLINKTags}" Margin="8,0">
                <Label Padding="0" VerticalAlignment="Center">
                    <TextBlock Text="Загружать ссылки (A)" TextWrapping="WrapWithOverflow"/>
                </Label>
            </CheckBox>
            <CheckBox VerticalAlignment="Center" IsChecked="{Binding Path=NewParseRule.CollectMETATags}" Margin="8,0">
                <Label Padding="0" VerticalAlignment="Center">
                    <TextBlock Text="Загружать метаданные (META)" TextWrapping="WrapWithOverflow"/>
                </Label>
            </CheckBox>
        </WrapPanel>

        <TabControl x:Name="UrlsToAddTabControl"
                        SelectedIndex="0"
                        Margin="4"
                        Grid.Row="1">
            <TabItem Header="Список URL для определения">
                <Grid Margin="4,4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!--<RowDefinition Height="Auto"/>-->
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Padding="0" Margin="0,4">
                        <TextBlock Text="Для автоматического формирования правила парсинга необходимо добавить минимум 4 однотипных ссылки на страницы, где расположены изображения, а так же выбрать метку, для которой формируются данные изображения."
                                   TextWrapping="WrapWithOverflow"
                                   FontSize="9"/>
                    </Label>
                    <!--<StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Label Content="Метка: " Padding="0" VerticalAlignment="Center" Margin="0,2"/>
                            <ComboBox ItemsSource="{Binding Parser.Labels}" SelectedIndex="0" MinWidth="200" x:Name="AddRuleLabelComboBox"/>
                        </StackPanel>-->
                    <DataGrid 
                                Grid.Row="2"
                                ItemsSource="{Binding Path=Urls}"
                                AutoGenerateColumns="False"
                                CanUserAddRows="True"
                                CanUserDeleteRows="True"
                                MinHeight="70"
                                Margin="0,4">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="URL" Binding="{Binding Path=Value}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Выбор изображений для метки">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Label Padding="0" Grid.ColumnSpan="2">
                        <TextBlock Text="{Binding ElementName=AddRuleLabelComboBox, Path=Text, StringFormat={}Выберите по одному изображению в каждой строке\, которое соответствует метке \'{0}\'. На основании этих данных будет подготовлено правило.}" TextWrapping="WrapWithOverflow"/>
                    </Label>

                    <ScrollViewer Grid.Row="1"
                                  CanContentScroll="True" 
                                  HorizontalScrollBarVisibility="Hidden"  
                                  VerticalScrollBarVisibility="Auto"
                                  x:Name="resultScrollViewer">
                        <ListBox
                                 x:Name="AddNewRuleSelectionListBox"
                                 ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                 SelectionChanged="AddNewRuleSelectionListBox_SelectionChanged"
                                 ItemsSource="{Binding Path=UrlsToAddList}"
                                 ItemContainerStyle="{DynamicResource ListBoxItemStyleClear}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Margin="2,2" MaxWidth="450">
                                        <Border.Background>
                                            <SolidColorBrush Color="DarkGray"/>
                                        </Border.Background>
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="10" Color="Black" Direction="235" Opacity=".5" RenderingBias="Quality" ShadowDepth="2" />
                                        </Border.Effect>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock TextWrapping="WrapWithOverflow" VerticalAlignment="Center" Margin="4,0">
                                                <Hyperlink 
                                                    NavigateUri="{Binding Path=Value}"
                                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=NavigateCommand}"
                                                    CommandParameter="{Binding Path=Value}">
                                                    <TextBlock Text="{Binding Path=Value}"/>
                                                </Hyperlink>
                                            </TextBlock>

                                            <Button Margin="4,0" ToolTip="Удалить" ToolTipService.IsEnabled="True"
                                                Grid.Column="1"
                                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                Command="{Binding Path=DeleteUrlWithImagesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" 
                                                CommandParameter="{Binding Path=Value}">
                                                <Image Source="/ExcelConverter.Parser;component/Icons/trash_16x16.png" />
                                            </Button>

                                            <ListBox Grid.Row="1" Grid.ColumnSpan="2" Margin="2"
                                                     ItemsSource="{Binding ParseResult}" 
                                                     SelectionChanged="ListBox_SelectionChanged"
                                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                     ItemContainerStyle="{DynamicResource ListBoxItemStyleClear}">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel IsItemsHost="True" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border Width="140" Height="100" x:Name="imageBorder">
                                                            <Border.Background>
                                                                <SolidColorBrush Color="{Binding Path=IsSelected, Converter={StaticResource IsSelectedBackgroundConverter}}"/>
                                                            </Border.Background>

                                                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                <Image 
                                                                    HorizontalAlignment="Stretch"
                                                                    VerticalAlignment="Center"
                                                                    Source="{Binding Path=Image, Converter={StaticResource ImageFromUrlConverter}}"/>

                                                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="{Binding ElementName=imageBorder, Path=Background}" Panel.ZIndex="99">
                                                                    <TextBlock Foreground="White" FontWeight="Bold" Text="{Binding Path=Node.Name}" Margin="4,0,0,0"/>    
                                                                </Border>

                                                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="{Binding ElementName=imageBorder, Path=Background}" Panel.ZIndex="99">
                                                                    <TextBlock VerticalAlignment="Center" Foreground="White" FontWeight="Bold" Margin="4,0,0,0">
                                                                        <Hyperlink 
                                                                            NavigateUri="{Binding Path=Url.AbsoluteUri}"
                                                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=NavigateCommand}"
                                                                            CommandParameter="{Binding Path=Url.AbsoluteUri}">
                                                                            <TextBlock>
                                                                                <TextBlock.Text>
                                                                                    <MultiBinding StringFormat="{}{0}x{1}">
                                                                                        <Binding Path="Image.Width" />
                                                                                        <Binding Path="Image.Height" />
                                                                                    </MultiBinding>
                                                                                </TextBlock.Text>
                                                                            </TextBlock>
                                                                        </Hyperlink>
                                                                    </TextBlock>


                                                                </Border>

                                                                <Button Margin="4,4" ToolTip="Увеличить" ToolTipService.IsEnabled="True" Panel.ZIndex="100"
                                                                        HorizontalAlignment="Right"
                                                                        VerticalAlignment="Top"
                                                                        Width="22"
                                                                        Height="22"
                                                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                                        Command="{Binding Path=ShowImageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" 
                                                                        CommandParameter="{Binding Path=Image}">
                                                                    <Image Source="/ExcelConverter.Parser;component/Icons/camera_16x16.png" />
                                                                </Button>
                                                            </Grid>

                                                        </Border>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Grid>
                                    </Border>    
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" 
                                               Orientation="Horizontal" 
                                               MaxWidth="{Binding ElementName=resultScrollViewer, Path=ActualWidth, Converter={StaticResource ApplyConverter}, ConverterParameter=-10;0}"
                                               ScrollViewer.VerticalScrollBarVisibility="Hidden"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Header="Правило">
                <GroupBox Header="Всё готово" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid  HorizontalAlignment="Center">
                        <Grid.Resources>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <WrapPanel Margin="0,4">
                            <Label>
                                <TextBlock Text="Для метки '" TextWrapping="WrapWithOverflow"/>
                            </Label>
                            <Label Content="{Binding ElementName=AddRuleLabelComboBox, Path=Text}"/>
                            <Label Content="'. "/>
                            <Label>
                                <TextBlock Text="было создано правило со следующими параметрами:" TextWrapping="WrapWithOverflow"/>
                            </Label>
                        </WrapPanel>


                        <Grid Grid.Row="2">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Тип подключения: " Grid.Row="0" Grid.Column="0"/>
                            <Label Content="{Binding Path=NewParseRule.Connection}" Grid.Row="0" Grid.Column="1"/>
                            <Label Content="Условие: " Grid.Row="1" Grid.Column="0"/>
                            <Label Content="{Binding Path=NewParseRule.Condition}" Grid.Row="1" Grid.Column="1"/>
                            <Label Content="Параметр: " Grid.Row="2" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=NewParseRule.Parameter}" MinWidth="200" Grid.Row="2" Grid.Column="1"/>
                            <Label Content="Мин. Размер изображения: " Grid.Row="3" Grid.Column="0"/>
                            <Label Grid.Row="3" Grid.Column="1">
                                <DockPanel>
                                    <TextBlock Text="{Binding Path=NewParseRule.MinImageWidth}"/>
                                    <TextBlock Text="x"/>
                                    <TextBlock Text="{Binding Path=NewParseRule.MinImageHeight}"/>
                                </DockPanel>
                            </Label>
                        </Grid>

                        <Button 
                                Content="Добавить это правило к текущему парсеру" 
                                Grid.Row="3" 
                                HorizontalAlignment="Center"
                                Margin="0,4" 
                                Command="{Binding Path=AddNewRuleCommand}"/>
                    </Grid>
                </GroupBox>
            </TabItem>
        </TabControl>

        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="4,4">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="2,4"/>
                </Style>
            </StackPanel.Resources>
            <Label Content="Загружено: " Padding="0" VerticalAlignment="Center"/>
            <Label Content="{Binding Path=LoadedPercent}" Padding="0" VerticalAlignment="Center"/>
            <Label Content="%" Padding="0" VerticalAlignment="Center"/>
            <Button 
                    Content="Назад"
                    Width="60"
                    IsEnabled="{Binding ElementName=UrlsToAddTabControl, Path=SelectedIndex, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=0}"
                    Command="{Binding PrevStepCommand}" CommandParameter="{Binding ElementName=UrlsToAddTabControl, Path=.}"/>
            <Button 
                    Content="Далее" 
                    Width="60"
                    IsDefault="True"
                    IsEnabled="{Binding ElementName=UrlsToAddTabControl, Path=SelectedIndex, Converter={StaticResource IsNotEqualsConverter}, ConverterParameter=2}"
                    Command="{Binding NextStepCommand}" CommandParameter="{Binding ElementName=UrlsToAddTabControl, Path=.}"/>
            <Button 
                    Content="Отмена" 
                    Width="60"
                    IsCancel="True"
                    Visibility="{Binding Path=CanCancel, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding CancelCommand}"/>
        </StackPanel>

        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.RowSpan="99" Grid.ColumnSpan="99" Panel.ZIndex="999"
              Visibility="{Binding Path=ShowImageMode, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.15*"/>
                <RowDefinition Height="0.70*"/>
                <RowDefinition Height="0.15*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.15*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.15*"/>
            </Grid.ColumnDefinitions>

            <Rectangle Fill="Black" Opacity="0.7" Grid.RowSpan="99" Grid.ColumnSpan="99" Panel.ZIndex="1000" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                Visibility="{Binding Path=ShowImageMode, Converter={StaticResource BooleanToVisibilityConverter}}" 
                MouseLeftButtonUp="Border_MouseLeftButtonUp"/>

            <!--<Rectangle Fill="Red" Grid.Row="1" Grid.Column="1" Panel.ZIndex="1001"/>-->
            <Border HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" Panel.ZIndex="1001" MouseLeftButtonUp="Border_MouseLeftButtonUp" Padding="10">
                <Border.Background>
                    <SolidColorBrush Color="White"/>
                </Border.Background>
                <Border.Effect>
                    <DropShadowEffect BlurRadius="20" Color="White" Direction="235" Opacity=".5" RenderingBias="Quality" ShadowDepth="0" />
                </Border.Effect>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Для закрытия этого окна просто нажмите в любую области экрана" TextWrapping="WrapWithOverflow" Margin="4,0,4,10" HorizontalAlignment="Center"/>
                    <Image Source="{Binding Path=LastSelected, Converter={StaticResource ImageFromUrlConverter}}" Grid.Row="1"/>
                </Grid>
            </Border>
        </Grid>

    </Grid>
</UserControl>
